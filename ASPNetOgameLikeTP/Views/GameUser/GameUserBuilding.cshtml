@model ASPNetOgameLikeTPClassLibrary.Entities.Building

<div class="row">
    @Html.DisplayFor(x => Model.Name)
</div>

<div class="row">
    Niveau @Html.DisplayFor(x => Model.Level)
</div>

<div class="row">
    <img src="@Url.Content(@Model.Print)" style="max-width:120px" />
</div>

<div class="row">
    Coût prochain niveau :
</div>

@foreach (var resource in Model.NextCost)
{
    <div class="row">
        <div class="col-md-1">
        </div>
        <div class="col-md-4" style="text-align:left">
            @resource.Name
        </div>
        <div class="col-md-6" style="text-align:left">
            @resource.LastQuantity
        </div>
        <div class="col-md-1">
        </div>
    </div>
}

@{
    string buildingHTMLId = "building" + Model.Id;
}

<div class="row">
    @Ajax.ActionLink("Augmenter niveau " + (Model.Level + 1), "UpgradeBuilding", "GameUser", new { buildingId = Model.Id }, new AjaxOptions()
{
    HttpMethod = "GET",
    AllowCache = false,
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = buildingHTMLId,
    OnSuccess = "upgradeBuilding" + Model.Id,
})
</div>

@{
    System.Text.StringBuilder builder = new System.Text.StringBuilder();
    builder.Append("<script type=\"text/javascript\">");
    builder.Append("function upgradeBuilding" + Model.Id + "() {");
    foreach (var resource in Model.NextCost)
    {
        builder.Append("    var " + resource.Name + "NewQty = document.getElementById(" + "res-" + resource.Name + "-qty" + ").innerHTML - " + resource.LastQuantity + " ;");
    }
    builder.Append("}");
    builder.Append("</script>");
    Html.Raw(HttpUtility.HtmlDecode(builder.ToString()));
}

@{

    var functionDeclaration = "function " + "upgradeBuilding" + Model.Id + "(){";

}
<script type="text/javascript">
    @functionDeclaration
    //Check if all are ok before substract
    @foreach (var resource in Model.NextCost)
    {
        @:var @resource.Name = document.getElementById("res-@resource.Name-qty")
        @:if (@resource.Name .innerHTML >= @resource.LastQuantity)
        @:{
            @:@resource.Name .innerHTML = @resource.Name .innerHTML - @resource.LastQuantity;
        @:}
    }
    }
</script>
